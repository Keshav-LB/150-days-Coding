create table prices(
  product_id number,
  start_date date,
  end_date date,
  price number,
  constraint pk_prices primary key(product_id, start_date, end_date)
);

CREATE TABLE UnitsSold (
    product_id     NUMBER,
    purchase_date  DATE,
    units          NUMBER
);

-- Insert data into Prices
INSERT INTO Prices VALUES (1, DATE '2019-02-17', DATE '2019-02-28', 5);
INSERT INTO Prices VALUES (1, DATE '2019-03-01', DATE '2019-03-22', 20);
INSERT INTO Prices VALUES (2, DATE '2019-02-01', DATE '2019-02-20', 15);
INSERT INTO Prices VALUES (2, DATE '2019-02-21', DATE '2019-03-31', 30);

-- Insert data into UnitsSold
INSERT INTO UnitsSold VALUES (1, DATE '2019-02-25', 100);
INSERT INTO UnitsSold VALUES (1, DATE '2019-03-01', 15);
INSERT INTO UnitsSold VALUES (2, DATE '2019-02-10', 200);
INSERT INTO UnitsSold VALUES (2, DATE '2019-03-22', 30);

COMMIT;

SQL> select * from prices;

PRODUCT_ID START_DAT END_DATE       PRICE
---------- --------- --------- ----------
         1 17-FEB-19 28-FEB-19          5
         1 01-MAR-19 22-MAR-19         20
         2 01-FEB-19 20-FEB-19         15
         2 21-FEB-19 31-MAR-19         30

SQL> select * from unitsSold;

PRODUCT_ID PURCHASE_      UNITS
---------- --------- ----------
         1 25-FEB-19        100
         1 01-MAR-19         15
         2 10-FEB-19        200
         2 22-MAR-19         30


SQL> select
  2      p.product_id,
  3      round(
  4          nvl(sum(u.units * p.price) / nullif(sum(u.units),0), 0),
  5          2
  6      ) as average_price
  7  from prices p
  8  left join unitssold u
  9    on u.product_id = p.product_id
 10   and u.purchase_date between p.start_date and p.end_date
 11  group by p.product_id;

PRODUCT_ID AVERAGE_PRICE
---------- -------------
         1          6.96
         2         16.96

=============================================================================================================
Write a solution to report the fraction of players that logged in again on the day after the day 
they first logged in, rounded to 2 decimal places. In other words, you need to determine 
the number of players who logged in on the day immediately following their initial login, 
and divide it by the number of total players.
=============================================================================================================


drop table activity cascade constraint;


create table activity(
player_id number,
device_id number,
event_date date,
games_played number,
constraint pk_activity primary key(player_id, event_date)
);


insert into activity values(1, 2, date '2016-03-01', 5);
insert into activity values(1, 2, date '2016-03-02', 6);
insert into activity values(2, 3, date '2017-06-25', 1);
insert into activity values(3, 1, date '2016-03-02', 0);
insert into activity values(3, 4, date '2018-07-03', 5);

SQL> select * from activity;

 PLAYER_ID  DEVICE_ID EVENT_DAT GAMES_PLAYED
---------- ---------- --------- ------------
         1          2 01-MAR-16            5
         1          2 02-MAR-16            6
         2          3 25-JUN-17            1
         3          1 02-MAR-16            0
         3          4 03-JUL-18            5





select a.player_id,
	a.event_date as first_login,
	b.event_date as second_login
from activity a
join activity b
  on a.player_Id = b.player_Id
  and b.event_date = a.event_date+1
order by player_id, a.event_date;



 PLAYER_ID FIRST_LOGIN SECOND_LOGIN
---------- ----------- ------------
         1   01-MAR-16    02-MAR-16

------------------------------------------------------X---------------------------------------

select count(distinct a.player_id) as player_count
from activity a
join activity b
on a.player_id = b.player_id
and b.event_date = a.event_date+1;


select count(distinct player_id) as total_count from activity;

------------------------------------------------------X---------------------------------------

select
	round(num_player * 1.0 / total_players, 2) as fractions
from
(
	select count(distinct a.player_id) as num_player
	from activity a
	join (
		select player_id, min(event_date) as first_login
		from activity
		group by player_id
	) b
	on a.player_id = b.player_id and a.event_date = b.first_login + 1
) x,
(
	select count(distinct player_id) as total_players
	from activity
) y;



 FRACTIONS
----------
       .33







